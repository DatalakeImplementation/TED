{
	"name": "Copy_blob_to_DeltaLake",
	"properties": {
		"activities": [
			{
				"name": "Config data Lookup",
				"description": "To read the config data",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "Config_file_DS",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Source file info",
				"description": "No of files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Config data Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Source_DS",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@activity('Config data Lookup').output.firstRow.LastUpdatedTime",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Iterating each file",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Source file info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Source file info').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_blob_delta_table",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Copy_blob_delta_table",
								"baseParameters": {
									"rawPath": {
										"value": "@activity('Config data Lookup').output.firstRow.rawPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@item()",
										"type": "Expression"
									},
									"deltaTableName": {
										"value": "@first(split(item(),'.'))",
										"type": "Expression"
									},
									"deltaSchema": {
										"value": "@pipeline().parameters.Source",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Update Config",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Iterating each file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Update_config",
					"baseParameters": {
						"config_path": {
							"value": "@activity('Config data Lookup').output.firstRow.configPath",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Source": {
				"type": "string"
			}
		},
		"annotations": []
	}
}